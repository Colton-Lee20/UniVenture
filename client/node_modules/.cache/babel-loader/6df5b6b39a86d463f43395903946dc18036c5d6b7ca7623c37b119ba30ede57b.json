{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\calub\\\\UniVentures\\\\UniVentures\\\\client\\\\src\\\\Account.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Banner from './Banner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Account() {\n  _s();\n  const [loading, setLoading] = useState(true); //dont load until cookie checked\n  const [isLoggedIn, setIsLoggedIn] = useState(false); //logged in boolean\n  const [userInfo, setUserInfo] = useState(null); //account info\n  const [error, setError] = useState(''); //error to display if no account\n\n  //GET LOGIN COOKIE\n  useEffect(() => {\n    const checkLoginStatus = async () => {};\n    checkLoginStatus();\n  }, []);\n\n  //DONT MOVE DOWN TO LOGIN OR ACCOUNT PAGE YET - need to check if logged in already\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 14\n    }, this); // could just put navbar here\n  }\n\n  //CHECK LOGIN COOKIE\n  if (!isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }, this);\n  }\n\n  //LOGGED IN - ACCOUNT PAGE\n  return (\n    /*#__PURE__*/\n    /*  NAVBAR  */\n    _jsxDEV(\"div\", {\n      className: \"bg-[#ffffff] dark:bg-gray-800 w-screen h-screen overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account-info\",\n        children: [userInfo ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Account ID: \", userInfo.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Email: \", userInfo.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading account info...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s(Account, \"jP4XXq9L4VzocrlDw2unR/MS4B4=\");\n_c = Account;\nexport default Account;\nvar _c;\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"names":["React","useState","useEffect","Navigate","axios","Banner","jsxDEV","_jsxDEV","Account","_s","loading","setLoading","isLoggedIn","setIsLoggedIn","userInfo","setUserInfo","error","setError","checkLoginStatus","children","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","className","id","email","_c","$RefreshReg$"],"sources":["C:/Users/calub/UniVentures/UniVentures/client/src/Account.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {Navigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Banner from './Banner';\r\nfunction Account() {\r\n\r\n    const [loading, setLoading] = useState(true);           //dont load until cookie checked\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);    //logged in boolean\r\n    const [userInfo, setUserInfo] = useState(null);         //account info\r\n    const [error, setError] = useState('');                 //error to display if no account\r\n\r\n    //GET LOGIN COOKIE\r\n    useEffect(() => {\r\n      const checkLoginStatus = async () => {\r\n        \r\n      };\r\n      checkLoginStatus();\r\n    }, []);\r\n    \r\n\r\n\r\n    //DONT MOVE DOWN TO LOGIN OR ACCOUNT PAGE YET - need to check if logged in already\r\n    if (loading) {\r\n      return <div><Banner/></div>;  // could just put navbar here\r\n    }\r\n\r\n\r\n\r\n\r\n    //CHECK LOGIN COOKIE\r\n    if (!isLoggedIn) {\r\n        return <Navigate to=\"/login\" replace />;\r\n    }\r\n    \r\n\r\n\r\n    //LOGGED IN - ACCOUNT PAGE\r\n    return (\r\n\r\n        /*  NAVBAR  */\r\n        <div className=\"bg-[#ffffff] dark:bg-gray-800 w-screen h-screen overflow-hidden\">\r\n        {/* navbar */}\r\n          <Banner/>\r\n            <div className=\"account-info\">\r\n                {userInfo ? (\r\n                    <div>\r\n                        <h1>Account ID: {userInfo.id}</h1>\r\n                        \r\n                        <p>Email: {userInfo.email}</p>\r\n                    </div>\r\n                ) : (\r\n                    <p>Loading account info...</p>\r\n                )}\r\n                {error && <p className=\"error\">{error}</p>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Account;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAAQC,QAAQ,QAAQ,kBAAkB;AAC1C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC9B,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAEf,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAW;EACxD,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAI;EACxD,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAS;EACxD,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAiB;;EAExD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMgB,gBAAgB,GAAG,MAAAA,CAAA,KAAY,CAErC,CAAC;IACDA,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;;EAIN;EACA,IAAIR,OAAO,EAAE;IACX,oBAAOH,OAAA;MAAAY,QAAA,eAAKZ,OAAA,CAACF,MAAM;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAE;EAChC;;EAKA;EACA,IAAI,CAACX,UAAU,EAAE;IACb,oBAAOL,OAAA,CAACJ,QAAQ;MAACqB,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC3C;;EAIA;EACA;IAAA;IAEI;IACAhB,OAAA;MAAKmB,SAAS,EAAC,iEAAiE;MAAAP,QAAA,gBAE9EZ,OAAA,CAACF,MAAM;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACPhB,OAAA;QAAKmB,SAAS,EAAC,cAAc;QAAAP,QAAA,GACxBL,QAAQ,gBACLP,OAAA;UAAAY,QAAA,gBACIZ,OAAA;YAAAY,QAAA,GAAI,cAAY,EAACL,QAAQ,CAACa,EAAE;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAElChB,OAAA;YAAAY,QAAA,GAAG,SAAO,EAACL,QAAQ,CAACc,KAAK;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC,gBAENhB,OAAA;UAAAY,QAAA,EAAG;QAAuB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAChC,EACAP,KAAK,iBAAIT,OAAA;UAAGmB,SAAS,EAAC,OAAO;UAAAP,QAAA,EAAEH;QAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;AAEd;AAACd,EAAA,CArDQD,OAAO;AAAAqB,EAAA,GAAPrB,OAAO;AAuDhB,eAAeA,OAAO;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}